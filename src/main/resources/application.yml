#可以去源码的org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean这个类里面查看都有哪些配置项、该怎么写server配置（不同版本可能会有不同）
#可以去源码的EurekaInstanceConfigBean Eureka Client实例配置
#可以去源码的EurekaClientConfigBean 客户端和服务器的交互配置

server:
  port: 9001

#应用名称及验证账号
spring:
  application:
    name: api-passenger
  cloud:
    service-registry:
      auto-registration:
        enabled: true

eureka:
  client:
    #设置服务注册中心的URL, 集群的话，向一个IP注册就行, 会被封装成EurekaClientConfig，与Eureka服务器交互的
    service-url:
      defaultZone: http://root:root@eureka-7901:7901/eureka/
    #在client端配置，将自己的将康状态传播到Server 健康检查组件（web）会显示哪里有问题了，也就是说心跳能告诉server
    #还活着，这里的healthcheck能告诉server生活质量。后面讲健康检查监控的时候会用到这个地方
    #http://localhost:9001/actuator/health http://localhost:9001/actuator/info
    healthcheck:
      enabled: true
    #Client自身的配置信息
  instance:
    hostname: localhost
    instance-id: api-passenger
    #prefer-ip-address: true
    #ip-address: 127.0.0.1

#在使用@FeignClient注解的时候 是默认使用了ribbon进行客户端的负载均衡的,默认的是随机的策略,那么如果我们想要更改策略的话,需要修改消费者yml中的配置,如下:
sms-service:
  ribbon:
    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.BestAvailableRule #配置规则 最空闲连接策略
    ConnectTimeout: 500 #请求连接超时时间
    ReadTimeout: 1000 #请求处理的超时时间
    OkToRetryOnAllOperations: true #对所有请求都进行重试
    MaxAutoRetriesNextServer: 2 #切换实例的重试次数
    MaxAutoRetries: 1 #对当前实例的重试次数